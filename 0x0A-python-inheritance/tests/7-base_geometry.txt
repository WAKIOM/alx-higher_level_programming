>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> b = BaseGeometry()
>>> b.area()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/codewise/alx/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 20, in area
    raise Exception("area() is not implemented")
Exception: area() is not implemented
>>> b.integer_validator("width", True)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/codewise/alx/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 35, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: width must be an integer
>>> b = BaseGeometry()
>>> b.integer_validator("name", 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/codewise/alx/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 37, in integer_validator
    raise ValueError("{} must be greater than 0".format(name))
ValueError: name must be greater than 0
>>> b.integer_validator("name", -2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/codewise/alx/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 37, in integer_validator
    raise ValueError("{} must be greater than 0".format(name))
ValueError: name must be greater than 0
>>> b.integer_validator("name", 8)
>>> b.integer_validator()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> b.integer_validator("name", 1, 4)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() takes 3 positional arguments but 4 were given
>>> b.integer_validator(3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> b.integer_validator("name", [3,4])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/codewise/alx/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 35, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: name must be an integer
>>> b.integer_validator("name", (3,4))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/codewise/alx/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 35, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: name must be an integer
>>> b.integer_validator("name", None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/codewise/alx/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 35, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: name must be an integer
>>> b.integer_validator("name", {3,5})
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/codewise/alx/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 35, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: name must be an integer
>>> b.integer_validator("name", "4")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/codewise/alx/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 35, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: name must be an integer
