>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[3, 5, 8], [12, 6]], 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 25, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([[3, 5, 8], [12, 6, 3]], 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 19, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero
>>> matrix_divided([[3, 5, 8], [12, 6, 3]], 'hello')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 17, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number
>>> matrix_divided([[2, 3, 9], ['c', 6, 3]], 5)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 29, in matrix_divided
    raise TypeError("matrix must be a matrix (list of lists)\
TypeError: matrix must be a matrix (list of lists)of integers/floats
